{"version":3,"sources":["assets/add.svg","assets/close.svg","components/Home.js","firebase.js","components/CreateGuest.js","components/CreatePartyAddingGuests.js","components/CreateParty.js","components/ViewGuests.js","components/ViewGuestsFocus.js","components/ViewParties.js","components/ViewPartiesFocus.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","CreateGuest","populateAllergies","allergiesArray","state","isDairyFree","push","isEggFree","isGrainFree","isPeanutFree","isSeafoodFree","isSesameFree","isShellfishFree","isSoyFree","isSulfiteFree","isTreeNutFree","isWheatFree","setState","allergies","handleChange","e","target","name","value","type","checked","handleImageChange","files","handleUploadImage","preventDefault","file","ref","put","then","child","getDownloadURL","url","photoURL","document","getElementById","src","clearState","email","isPetFriendly","diet","isGlutenFree","handleSubmit","database","petFriendly","alert","intolerances","this","toString","console","log","onSubmit","htmlFor","placeholder","onChange","image","onClick","id","alt","Component","CreatePartyAddingGuests","guest","on","response","data","val","key","guestInfo","guestID","map","classname","props","getChoice","aria-label","add","CreateParty","getRecipes","intoleranceAxios","intoleranceList","join","dietAxios","dietList","axios","method","params","query","format","res","recipes","results","catch","error","updateState","event","getUserKey","guestsKeys","includes","convertKeys","createIntolerancesList","createDietList","i","length","undefined","intolerance","addedGuests","profile","submitParty","partyName","partyAddress","partyDetails","party","showGuestList","toggleAddGuests","removeKey","filter","item","action","invitedGuests","close","recipeObj","rel","href","sourceUrl","title","ViewGuests","syncGuests","guests","focusUser","focusedUser","to","ViewGuestsFocus","match","activeClassName","ViewParties","syncParties","parties","partyInfo","partyID","focusedParty","ViewPartiesFocus","syncParty","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,uLCe5BC,MAbf,WACI,OACI,gCACI,yBAAKC,UAAU,uBACf,8DAEA,yBAAKA,UAAU,qBACX,0O,qCCOhBC,IAASC,cAXc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAMKR,IAASS,UAAzB,ICgbeC,E,kDA5bb,aAAe,IAAD,8BACZ,gBAyBFC,kBAAoB,WAChB,IAAMC,EAAiB,GAEnB,EAAKC,MAAMC,aACbF,EAAeG,KAAK,SAElB,EAAKF,MAAMG,WACbJ,EAAeG,KAAK,OAElB,EAAKF,MAAMI,aACbL,EAAeG,KAAK,SAElB,EAAKF,MAAMK,cACbN,EAAeG,KAAK,WAElB,EAAKF,MAAMM,eACbP,EAAeG,KAAK,WAElB,EAAKF,MAAMO,cACbR,EAAeG,KAAK,UAElB,EAAKF,MAAMQ,iBACbT,EAAeG,KAAK,aAElB,EAAKF,MAAMS,WACbV,EAAeG,KAAK,OAElB,EAAKF,MAAMU,eACbX,EAAeG,KAAK,WAElB,EAAKF,MAAMW,eACbZ,EAAeG,KAAK,YAElB,EAAKF,MAAMY,aACbb,EAAeG,KAAK,SAGtB,EAAKW,SACH,CACEC,UAAWf,KAjEL,EAsEdgB,aAAe,SAACC,GAAM,MAEmBA,EAAEC,OAAjCC,EAFY,EAEZA,KAAMC,EAFM,EAENA,MAAOC,EAFD,EAECA,KAAMC,EAFP,EAEOA,QAClB,aAATD,EACI,EAAKP,SAAL,eACGK,EAAOG,IACN,WACA,EAAKvB,uBAET,EAAKe,SAAL,eACGK,EAAOC,KAhFF,EAoFdG,kBAAoB,SAACN,GACnB,IAAMO,EAAQP,EAAEC,OAAOM,MACvB,EAAKV,SAAS,CACZU,MAAOA,KAvFG,EA2FdC,kBAAoB,SAACR,GACnBA,EAAES,iBAEF,GAAG,EAAKzB,MAAMuB,MAAM,CAClB,IAAMG,EAAO,EAAK1B,MAAMuB,MAAM,GAC9BpC,IACGS,UACA+B,IAFH,UAHiB,SAGjB,YAEwBD,EAAKR,OAC1BU,IAAIF,GACJG,MAAK,WACJ1C,IACGS,UACA+B,IAFH,UARa,WAWVG,MAAMJ,EAAKR,MACXa,iBACAF,MAAK,SAACG,GACL,EAAKnB,SAAS,CACZoB,SAAUD,IAEZE,SAASC,eAAe,YAAYC,IAAMJ,UA9GxC,EAoHdK,WAAa,WACX,EAAKxB,SAAS,CACZU,MAAO,KACPU,SACE,yFACFf,KAAM,GACNoB,MAAO,GACPC,eAAe,EACfC,KAAM,GAENvC,aAAa,EACbE,WAAW,EACXsC,cAAc,EACdrC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,WAAW,EACXC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbE,UAAW,MA1ID,EAgJd4B,aAAe,SAAC1B,IACdA,EAAES,iBACK,EAAKzB,MAAMkB,MAAQ,EAAKlB,MAAMsC,QACjBnD,IAASwD,WAAWhB,IAApB,YACRzB,KAAK,CACTgB,KAAM,EAAKlB,MAAMkB,KACjBoB,MAAO,EAAKtC,MAAMsC,MAClBM,YAAa,EAAK5C,MAAMuC,cACxBC,KAAM,EAAKxC,MAAMwC,KACjB1B,UAAW,EAAKd,MAAMc,UACtBmB,SAAU,EAAKjC,MAAMiC,WAEvB,EAAKI,cAELQ,MAAM,wCA5JZ,EAAK7C,MAAQ,CACXuB,MAAO,KACPU,SAAU,yFACVf,KAAM,GACNoB,MAAO,GACPC,eAAe,EACfC,KAAM,GAENvC,aAAa,EACbE,WAAW,EACXsC,cAAc,EACdrC,aAAa,EACbC,cAAc,EACdC,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,WAAW,EACXC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbE,UAAW,IAtBD,E,qDAmKJ,IAAD,OACDgC,EAAeC,KAAK/C,MAAMc,UAAUkC,WAE1C,OADAC,QAAQC,IAAIJ,GAEV,6BAAS5D,UAAU,8BACjB,kDACA,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,kBAAkBiE,SAAUJ,KAAKL,cAG/C,2BAAOxD,UAAU,YAAYkE,QAAQ,eACrC,2BACElE,UAAU,YACVkC,KAAK,OACLD,MAAO4B,KAAK/C,MAAMkB,KAClBA,KAAK,OACLmC,YAAY,OACZC,SAAUP,KAAKhC,eAIf,2BAAOqC,QAAQ,gBACf,2BACElE,UAAU,YACVkC,KAAK,QACLD,MAAO4B,KAAK/C,MAAMsC,MAClBpB,KAAK,QACLmC,YAAY,QACZC,SAAUP,KAAKhC,eAInB,yBAAK7B,UAAU,aACb,2BAAOkE,QAAQ,IAAf,yBACA,2BACEhC,KAAK,WACLD,MAAO4B,KAAK/C,MAAMuC,cAClBrB,KAAK,gBACLG,QAAS0B,KAAK/C,MAAMuC,cACpBe,SAAUP,KAAKhC,gBAInB,yBAAK7B,UAAU,cACf,+DACE,2BAAOkE,QAAQ,8BACf,2BACEjC,MAAO4B,KAAK/C,MAAMuD,MAClBnC,KAAK,OACLkC,SAAU,SAACtC,GACT,EAAKM,kBAAkBN,MAG3B,4BACEwC,QAAS,SAACxC,GACR,EAAKQ,kBAAkBR,KAF3B,WASF,wBAAI9B,UAAU,cAAd,QACA,yBAAKA,UAAU,aACb,+BACE,2BACEkC,KAAK,QACLF,KAAK,OACLC,MAAM,cACNE,QAA6B,gBAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,eAUA,+BACE,2BACEK,KAAK,QACLF,KAAK,OACLC,MAAM,aACNE,QAA6B,eAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,cAUA,+BACE,2BACEK,KAAK,QACLF,KAAK,OACLC,MAAM,QACNE,QAA6B,UAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,SAUA,+BACE,2BACEK,KAAK,QACLF,KAAK,OACLC,MAAM,cACNE,QAA6B,gBAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,eAUA,+BACE,2BACEK,KAAK,QACLF,KAAK,OACLC,MAAM,QACNE,QAA6B,UAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,SAUA,+BACE,2BACEK,KAAK,QACLF,KAAK,OACLC,MAAM,UACNE,QAA6B,YAApB0B,KAAK/C,MAAMwC,KACpBc,SAAUP,KAAKhC,eACd,IAPL,aAYF,4CACA,wBAAI7B,UAAU,gBACZ,4BACE,+BACE,2BACEkC,KAAK,WACLF,KAAK,cACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMC,cACnB,IANL,UAUF,4BACE,+BACE,2BACEmB,KAAK,WACLF,KAAK,YACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMG,YACnB,IANL,QAUF,4BACE,+BACE,2BACEiB,KAAK,WACLF,KAAK,cACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMI,cACnB,IANL,UAUF,4BACE,+BACE,2BACEgB,KAAK,WACLF,KAAK,eACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMK,eACnB,IANL,WAUF,4BACE,+BACE,2BACEe,KAAK,WACLF,KAAK,gBACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMM,gBACnB,IANL,YAUF,4BACE,+BACE,2BACEc,KAAK,WACLF,KAAK,eACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMO,eACnB,IANL,WAUF,4BACE,+BACE,2BACEa,KAAK,WACLF,KAAK,kBACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMQ,kBACnB,IANL,cAUF,4BACE,+BACE,2BACEY,KAAK,WACLF,KAAK,YACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMS,YACnB,IANL,QAUF,4BACE,+BACE,2BACEW,KAAK,WACLF,KAAK,gBACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMU,gBACnB,IANL,YAUF,4BACE,+BACE,2BACEU,KAAK,WACLF,KAAK,gBACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMW,gBACnB,IANL,aAUF,4BACE,+BACE,2BACES,KAAK,WACLF,KAAK,cACLoC,SAAUP,KAAKhC,aACfM,QAAS0B,KAAK/C,MAAMY,cACnB,IANL,WAWJ,4BAAQ4C,QAAS,SAACxC,GAAD,OAAO,EAAK0B,aAAa1B,KAA1C,WAGF,iDACA,yBAAK9B,UAAU,oBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,aACbuE,GAAG,WACHrB,IAAKW,KAAK/C,MAAMiC,SAChByB,IAAI,MAIN,oCAAUX,KAAK/C,MAAMkB,MACrB,qCAAW6B,KAAK/C,MAAMsC,OACtB,sCACW,IACRS,KAAK/C,MAAMuC,cAAgB,eAAiB,KAE/C,oCAAUQ,KAAK/C,MAAMwC,MACrB,4CAAkBO,KAAK/C,MAAMc,mB,GAnbjB6C,a,kDC6CXC,E,kDA7CX,aAAc,IAAD,8BACT,gBACK5D,MAAQ,CACT6D,MAAM,IAHD,E,gEAMO,IAAD,OACD1E,IAASwD,WAAWhB,IAAI,WAChCmC,GAAG,SAAS,SAACC,GAEf,IAAMC,EAAOD,EAASE,MAChBJ,EAAQ,GACd,IAAK,IAAIK,KAAOF,EACZH,EAAM3D,KAAK,CAAEiE,UAAWH,EAAKE,GAAME,QAASF,IAEhD,EAAKrD,SAAS,CACVgD,e,+BAMH,IAAD,OACJ,OACI,wBAAI3E,UAAU,UACT6D,KAAK/C,MAAM6D,MAAMQ,KAAI,SAACR,GACnB,OACI,yBAAK3E,UAAU,mBACX,wBAAIoF,UAAU,SAASJ,IAAK,QAAQL,EAAMO,QAASZ,QAAS,kBAAI,EAAKe,MAAMC,UAAUX,EAAMO,UAAUX,GAAII,EAAMO,SAC3G,yBAAKlF,UAAU,+BAEX,0BAAMuF,aAAW,OAAM,yBAAKvF,UAAU,MAAMkD,IAAKsC,IAAKhB,IAAI,MAC1D,yBAAKxE,UAAU,WAAWkD,IAAKyB,EAAMM,UAAUlC,SAAUyB,IAAKG,EAAMM,UAAUjD,QAElF,uBAAGhC,UAAU,aAAa2E,EAAMM,UAAUjD,MAC1C,2BAAI2C,EAAMM,UAAU7B,iB,GApCdqB,a,iBCyXvBgB,E,kDAnXb,aAAe,IAAD,8BACZ,gBAiBFC,WAAa,SAAC5D,GACZA,EAAES,iBAEF,IAGMoD,EAAmB,EAAK7E,MAAM8E,gBAAgBC,OAC9CC,EAAY,EAAKhF,MAAMiF,SAASF,OAEtCG,IAAM,CACJC,OAAQ,MACRnD,IARU,6CASVoD,OAAQ,CACN/F,OATQ,mCAURgG,MAAO,SACPC,OAAQ,OACRxC,aAAc+B,EACdrC,KAAMwC,KAGPnD,MAAK,SAAC0D,GACL,EAAK1E,SAAS,CACZ2E,QAASD,EAAIvB,KAAKyB,aAGrBC,OAAM,SAACC,GACN9C,MAAM8C,OA5CE,EAgDdC,YAAc,SAACC,GACb,EAAKhF,SAAL,eACGgF,EAAM5E,OAAOwC,GAAKoC,EAAM5E,OAAOE,SAlDtB,EAsDd2E,WAAa,SAAC5B,GACZ,IAAM6B,EAAa,EAAK/F,MAAM+F,YACG,IAA7BA,EAAWC,SAAS9B,IAAgB6B,EAAW7F,KAAKgE,GACxD,EAAKrD,SACH,CACEkF,eAEF,WACE,EAAKE,cACL,EAAKC,yBACL,EAAKC,qBAhEG,EAqEdA,eAAiB,WAEf,IADA,IAAMlB,EAAW,GACRmB,EAAI,EAAGA,EAAI,EAAKpG,MAAM+F,WAAWM,OAAQD,IAChDjH,IACGwD,WACAhB,IAAI,WAAa,EAAK3B,MAAM+F,WAAWK,IACvCtC,GAAG,SAAS,SAACC,GAEZ,IAAMvB,EAAOuB,EAASE,MAAMzB,MAEI,IAA5ByC,EAASe,SAASxD,SAA4B8D,IAAT9D,GACvCyC,EAAS/E,KAAKsC,MAGtB,EAAK3B,SAAS,CACZoE,cApFU,EAwFdiB,uBAAyB,WAEvB,IADA,IAAMpB,EAAkB,GACfsB,EAAI,EAAGA,EAAI,EAAKpG,MAAM+F,WAAWM,OAAQD,IAChDjH,IACGwD,WACAhB,IAAI,WAAa,EAAK3B,MAAM+F,WAAWK,IACvCtC,GAAG,SAAS,SAACC,GAEZ,IADA,IAAMwC,EAAcxC,EAASE,MAAMnD,UAC1BsF,EAAI,EAAGA,EAAIG,EAAYF,OAAQD,KAES,IAA7CtB,EAAgBkB,SAASO,EAAYH,UAClBE,IAAnBC,EAAYH,IAEZtB,EAAgB5E,KAAKqG,EAAYH,OAI3C,EAAKvF,SAAS,CACZiE,qBA1GU,EA8GdmB,YAAc,WAEZ,IADA,IAAMO,EAAc,GADF,WAETJ,GACPjH,IACGwD,WACAhB,IAAI,WAAa,EAAK3B,MAAM+F,WAAWK,IACvCtC,GAAG,SAAS,SAACC,GACZ,IAAM0C,EAAU1C,EAASE,MACzBwC,EAAQvC,IAAI,EAAKlE,MAAM+F,WAAWK,GAClCI,EAAYtG,KAAKuG,OAPdL,EAAI,EAAGA,EAAI,EAAKpG,MAAM+F,WAAWM,OAAQD,IAAM,EAA/CA,GAUT,EAAKvF,SAAS,CACZ2F,iBA3HU,EA+HdE,YAAc,SAAC1F,GAGb,GAFAA,EAAES,iBAGA,EAAKzB,MAAM2G,WACX,EAAK3G,MAAM4G,cACiB,KAA5B,EAAK5G,MAAM6G,aACX,CACA,IAAMC,EAAQ,GACdA,EAAMH,UAAY,EAAK3G,MAAM2G,UAC7BG,EAAMF,aAAe,EAAK5G,MAAM4G,aAChCE,EAAMD,aAAe,EAAK7G,MAAM6G,aAChCC,EAAMhC,gBAAkB,EAAK9E,MAAM8E,gBACnCgC,EAAM7B,SAAW,EAAKjF,MAAMiF,SAC5B6B,EAAMN,YAAc,EAAKxG,MAAMwG,YAC/BM,EAAM7E,SAAW,EAAKjC,MAAMiC,SAC5B6E,EAAMtB,QAAU,EAAKxF,MAAMwF,QAG3BrG,IAASwD,WAAWhB,IAAI,YAAYzB,KAAK4G,GAEzC,EAAKjG,SAAS,CACZ8F,UAAW,GACXC,aAAc,GACdC,aAAc,GACd/B,gBAAiB,GACjBG,SAAU,GACVuB,YAAa,GACbhB,QAAS,GACTO,WAAY,GACZgB,eAAe,EACf9E,SAAU,EAAKjC,MAAMiC,aA9Jb,EAmKd+E,gBAAkB,SAAChG,GACjBA,EAAES,iBACF,EAAKZ,SAAS,CACZkG,eAAgB,EAAK/G,MAAM+G,iBAtKjB,EA0KdzF,kBAAoB,SAACN,GACnBiC,QAAQC,IAAIlC,EAAEC,OAAOM,OACrB,IAAMA,EAAQP,EAAEC,OAAOM,MACvB,EAAKV,SAAS,CACZU,MAAOA,KA9KG,EAkLdC,kBAAoB,SAACR,GACnBA,EAAES,iBAEF,GAAI,EAAKzB,MAAMuB,MAAM,GAAI,CACvB,IAAMG,EAAO,EAAK1B,MAAMuB,MAAM,GAC9BpC,IACGS,UACA+B,IAFH,UAHiB,SAGjB,YAEwBD,EAAKR,OAC1BU,IAAIF,GACJG,MAAK,WACJ1C,IACGS,UACA+B,IAFH,UARa,WAWVG,MAAMJ,EAAKR,MACXa,iBACAF,MAAK,SAACG,GAEL,EAAKnB,SAAS,CACZoB,SAAUD,YApMV,EA2MdiF,UAAU,SAAC/C,GACT,IAAM6B,EAAa,EAAK/F,MAAM+F,WAAWmB,QAAO,SAAAC,GAAI,OAAGA,IAASjD,KAChE,EAAKrD,SACH,CACEkF,eAEF,WACE,EAAKE,cACL,EAAKC,yBACL,EAAKC,qBAlNT,EAAKnG,MAAQ,CACXwF,QAAS,GACTmB,UAAW,GACXC,aAAc,GACdC,aAAc,GACdd,WAAY,GACZS,YAAa,GACbvB,SAAU,GACVH,gBAAiB,GACjBiC,eAAe,EACf9E,SAAU,6IAZA,E,kGAyNJ,IAAD,OACP,OACE,6BAAS/C,UAAU,sBAGf,0BAAMA,UAAU,UAAUkI,OAAO,IACjC,8CACA,yBAAKlI,UAAU,mBACf,2BAAOkE,QAAQ,kBACf,2BAAOhC,KAAK,OAAOqC,GAAG,YAAYtC,MAAO4B,KAAK/C,MAAM2G,UAAWrD,SAAUP,KAAK6C,YAAa1E,KAAK,YAAYmC,YAAY,eAExH,2BAAOD,QAAQ,YACf,2BAAOhC,KAAK,OAAOqC,GAAG,eAAetC,MAAO4B,KAAK/C,MAAM4G,aAActD,SAAUP,KAAK6C,YAAa1E,KAAK,UAAUmC,YAAY,YAE5H,2BAAOD,QAAQ,YACf,2BAAOhC,KAAK,OAAOqC,GAAG,eAAetC,MAAO4B,KAAK/C,MAAM6G,aAAcvD,SAAUP,KAAK6C,YAAa1E,KAAK,UAAUmC,YAAY,kBAI5H,yBAAKnE,UAAU,cACb,2BAAOkE,QAAQ,gBACf,2BACEjC,MAAO4B,KAAK/C,MAAMuD,MAClBnC,KAAK,OACLkC,SAAU,SAACtC,GACT,EAAKM,kBAAkBN,MAG3B,4BACEwC,QAAS,SAACxC,GACR,EAAKQ,kBAAkBR,KAF3B,kBAYF,yBAAK9B,UAAU,qBACf,4BACEA,UAAU,YACVkC,KAAK,SACLoC,QAAS,SAACxC,GAAD,OAAO,EAAKgG,gBAAgBhG,KAHvC,wBAQA,6BAAS9B,UAAU,eAChB6D,KAAK/C,MAAM+G,cACV,kBAAC,EAAD,CAAyBvC,UAAW,SAACxD,GAAD,OAAO,EAAK8E,WAAW9E,MACzD,MAIN,6BAAS9B,UAAU,eACjB,gDACA,wBAAIA,UAAU,UACX6D,KAAK/C,MAAMwG,YAAYnC,KAAI,SAACgD,GAC3B,OACE,yBAAKnI,UAAU,mBACb,wBAAIA,UAAU,SAASsE,QAAS,kBAAI,EAAKyD,UAAUI,EAAcnD,OAE/D,0BAAMO,aAAW,SAAQ,yBAAKvF,UAAU,QAAQkD,IAAKkF,IAAO5D,IAAI,MAChE,yBAAKxE,UAAU,+BACf,yBACEA,UAAU,WACVkD,IAAKiF,EAAcpF,SACnByB,IAAK2D,EAAcnG,QAGrB,uBAAGhC,UAAU,aAAamI,EAAcnG,MACxC,2BAAImG,EAAc/E,cAS9B,6BAASpD,UAAU,oBACjB,yCACA,4BACG6D,KAAK/C,MAAMiF,SAASZ,KAAI,SAAC7B,GACxB,OACE,4BACE,2BAAIA,SAQd,6BAAStD,UAAU,0BACjB,gDACA,4BACG6D,KAAK/C,MAAM8E,gBAAgBT,KAAI,SAAC8C,GAC/B,OACE,4BACE,2BAAIA,QAKZ,2BAAO/D,QAAQ,qBACf,4BACEK,GAAG,kBACHrC,KAAK,SACLoC,QAAS,SAACxC,GAAD,OAAO,EAAK4D,WAAW5D,KAHlC,gBAWF,6BAAS9B,UAAU,wBACjB,wBAAIA,UAAU,mBACX6D,KAAK/C,MAAMwF,QAAQnB,KAAI,SAACkD,GACvB,OACE,wBAAIrI,UAAU,YACZ,wBAAIA,UAAU,cACZ,uBACEsI,IAAI,sBACJvG,OAAO,SACPwG,KAAMF,EAAUG,WAEfH,EAAUI,QAGf,yBAAKzI,UAAU,kBACf,yBAAKA,UAAU,YACbkD,IAAG,+CACDmF,EAAU9D,GADT,IAEC,UAFD,IAEc,OACjBC,IAAK6D,EAAUI,eAS3B,4BAAQlE,GAAG,cAAcrC,KAAK,SAASoC,QAAS,SAACxC,GAAD,OAAO,EAAK0F,YAAY1F,KAAxE,sB,GA7WgB2C,aC4DXiE,E,kDAhEX,aAAc,IAAD,8BACT,gBAeJC,WAAW,WACP1I,IAASwD,WAAWhB,IAAI,WAAWmC,GAAG,SAAQ,SAAC2B,GAC3C,IAAMqC,EAAS,GACT9D,EAAOyB,EAAQxB,MACrB,IAAK,IAAIC,KAAOF,EACZ8D,EAAO5H,KAAK,CAACiE,UAAWH,EAAKE,GAAME,QAAUF,IAEjD,EAAKrD,SAAS,CACViH,eAxBC,EAkCbC,UAAU,SAAC/G,GACP,EAAKH,SAAS,CACVmH,YAAahH,EAAEC,OAAOwC,MAlC1B,EAAKzD,MAAM,CACP8H,OAAO,CACH,CACI3D,UAAU,CACNjD,KAAK,GACLoB,MAAM,GACNL,SAAS,MAIrB+F,YAAa,OAZR,E,gEA8BTjF,KAAK8E,e,+BAUA,IAAD,OACJ,OACI,6BAAS3I,UAAU,uBACf,0CACA,wBAAIA,UAAU,UACT6D,KAAK/C,MAAM8H,OAAOzD,KAAI,SAACR,GACpB,OACI,kBAAC,IAAD,CAAM3E,UAAU,aAAagF,IAAK,OAAOL,EAAMO,QAAS6D,GAAI,WAAWpE,EAAMO,SAC7E,wBAAIF,IAAKL,EAAMO,QAASlF,UAAU,SAASuE,GAAII,EAAMO,QAASZ,QAAS,SAACxC,GAAD,OAAK,EAAK+G,UAAU/G,KACvF,yBAAK9B,UAAU,+BACX,yBAAKA,UAAU,WAAWkD,IAAKyB,EAAMM,UAAUlC,SAAUyB,IAAK,kBAAkBG,EAAMM,UAAUjD,QAEpG,4BAAK2C,EAAMM,UAAUjD,iB,GArD5ByC,aCgDVuE,E,kDA/CX,aAAc,IAAD,8BACT,gBAUJL,WAAW,WACP1I,IAASwD,WAAWhB,IAAI,WAAW,EAAK4C,MAAM4D,MAAM/C,OAAO3B,IAAIK,GAAG,SAAQ,SAAC2B,GACvE,EAAK5E,SAAS,CACVmH,YAAavC,EAAQxB,YAdpB,EAwBb8D,UAAU,SAAC/G,GACP,EAAKH,SAAS,CACVmH,YAAahH,EAAEC,OAAOwC,MAxB1B,EAAKzD,MAAM,CACPgI,YAAY,CACR9G,KAAK,GACLoB,MAAM,GACNL,SAAS,KANR,E,gEAoBTc,KAAK8E,e,+BAWL,OACI,6BAAS3I,UAAU,iCACf,yBAAKA,UAAU,eACf,kBAAC,IAAD,CAAMA,UAAU,OAAOkJ,gBAAgB,cAAcH,GAAG,WAAxD,cACI,yBAAK/I,UAAU,kBACX,yBAAKkD,IAAKW,KAAK/C,MAAMgI,YAAY/F,SAAUyB,IAAKX,KAAK/C,MAAMgI,YAAY9G,KAAO,sBAElF,4BAAK6B,KAAK/C,MAAMgI,YAAY9G,MAC5B,2BAAI6B,KAAK/C,MAAMgI,YAAY1F,a,GAxCjBqB,aCyEf0E,E,kDAxEX,aAAc,IAAD,8BACT,gBAoBJC,YAAY,WACRnJ,IAASwD,WAAWhB,IAAI,YAAYmC,GAAG,SAAQ,SAAC2B,GAC5C,IAAM8C,EAAU,GACVvE,EAAOyB,EAAQxB,MAErB,IAAK,IAAIC,KADTjB,QAAQC,IAAIuC,EAAQxB,OACJD,EACZuE,EAAQrI,KAAK,CAACsI,UAAWxE,EAAKE,GAAMuE,QAAUvE,IAElD,EAAKrD,SAAS,CACV0H,gBA9BC,EAwCbR,UAAU,SAAC/G,GACP,EAAKH,SAAS,CACV6H,aAAc1H,EAAEC,OAAOwC,MAxC3B,EAAKzD,MAAM,CACPuI,QAAQ,CACJ,CAEIC,UAAU,CAENhC,YAAY,GACZvB,SAAS,GACTH,gBAAgB,GAChB8B,aAAa,GACbC,aAAa,GACbF,UAAU,MAItB+B,aAAc,OAjBT,E,gEAoCT3F,KAAKuF,gB,+BAUA,IAAD,OACJ,OACI,6BAASpJ,UAAU,uBACf,uCACA,wBAAIA,UAAU,UACT6D,KAAK/C,MAAMuI,QAAQlE,KAAI,SAACyC,GACrB,OACI,kBAAC,IAAD,CAAM5H,UAAU,aAAagF,IAAK,OAAO4C,EAAM2B,QAASR,GAAI,gBAAgBnB,EAAM2B,SAClF,wBAAIvE,IAAK4C,EAAM2B,QAASvJ,UAAU,SAASuE,GAAIqD,EAAM2B,QAASjF,QAAS,SAACxC,GAAD,OAAK,EAAK+G,UAAU/G,KACvF,yBAAK9B,UAAU,kBACX,yBAAKkD,IAAK0E,EAAM0B,UAAUvG,SAAUyB,IAAKoD,EAAM0B,UAAU3B,gBAE7D,4BAAKC,EAAM0B,UAAU7B,WACrB,2BAAIG,EAAM0B,UAAU5B,cACpB,2BAAIE,EAAM0B,UAAU3B,yB,GA7D1BlD,aC6GXgF,E,kDA3GX,aAAc,IAAD,8BACT,gBAcJC,UAAU,WACNzJ,IAASwD,WAAWhB,IAAI,YAAY,EAAK4C,MAAM4D,MAAM/C,OAAO3B,IAAIK,GAAG,SAAQ,SAAC2B,GACxExC,QAAQC,IAAIuC,EAAQxB,OACpB,EAAKpD,SAAS,CACV6H,aAAcjD,EAAQxB,YAnBrB,EA6Bb8D,UAAU,SAAC/G,GACP,EAAKH,SAAS,CACVmH,YAAahH,EAAEC,OAAOwC,MA7B1B,EAAKzD,MAAM,CACP0I,aAAa,CACT/B,UAAU,GACVE,aAAa,GACb5E,SAAS,GACTgD,SAAS,GACTH,gBAAgB,GAChB0B,YAAY,GACZhB,QAAQ,KAVP,E,gEAyBTzC,KAAK6F,c,+BAaL,OAFA3F,QAAQC,IAAIH,KAAK/C,MAAM0I,cAGnB,6BAASxJ,UAAU,mCACf,kBAAC,IAAD,CAAMA,UAAU,OAAOkJ,gBAAgB,cAAcH,GAAG,gBAAxD,cACA,yBAAK/I,UAAU,eACX,yBAAKA,UAAU,kBACX,yBAAKkD,IAAKW,KAAK/C,MAAM0I,aAAazG,SAAUyB,IAAKX,KAAK/C,MAAM0I,aAAa7B,gBAE7E,4BAAK9D,KAAK/C,MAAM0I,aAAa/B,WAC7B,2BAAI5D,KAAK/C,MAAM0I,aAAa7B,cAE5B,yBAAK3H,UAAU,aACX,0CACA,wBAAIA,UAAU,eACT6D,KAAK/C,MAAM0I,aAAalC,YAAYnC,KAAI,SAACR,GACtC,OAAO,wBAAI3E,UAAU,WAAU,2BAAI2E,EAAM3C,YAKrD,yBAAKhC,UAAU,oBACX,qEACA,wBAAIA,UAAU,mBACT6D,KAAK/C,MAAM0I,aAAazD,SAASZ,KAAI,SAAC7B,GACnC,OAAO,wBAAItD,UAAU,eAAc,2BAAIsD,QAI/C,wBAAItD,UAAU,0BACT6D,KAAK/C,MAAM0I,aAAa5D,gBAAgBT,KAAI,SAACkC,GAC1C,OAAO,wBAAIrH,UAAU,sBAAqB,2BAAIqH,SAK1D,6BAASrH,UAAU,wBACf,iDACA,wBAAIA,UAAU,mBACb6D,KAAK/C,MAAM0I,aAAalD,QAAQnB,KAAI,SAACkD,GAClC,OACA,wBAAIrI,UAAU,YACV,wBAAIA,UAAU,cACd,uBACIsI,IAAI,sBACJvG,OAAO,SACPwG,KAAMF,EAAUG,WAEfH,EAAUI,QAGf,yBAAKzI,UAAU,kBACf,yBAAKA,UAAU,YACfkD,IAAG,+CACCmF,EAAU9D,GADX,IAEC,UAFD,IAEc,OACjBC,IAAK6D,EAAUI,qB,GA7FhBhE,aCwFhBkF,E,kDA1Eb,aAAc,IAAD,8BACX,gBACK7I,MAAQ,GAFF,E,qDAOX,OACI,kBAAC,IAAD,KAEE,yBAAKd,UAAU,OAEb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACf,kBAAC,IAAD,CACE4J,OAAK,EACL5J,UAAU,OACVkJ,gBAAgB,cAChBH,GAAG,KAJL,QASA,kBAAC,IAAD,CACEa,OAAK,EACL5J,UAAU,OACVkJ,gBAAgB,cAChBH,GAAG,gBAJL,gBASA,kBAAC,IAAD,CACE/I,UAAU,OACVkJ,gBAAgB,cAChBH,GAAG,gBAHL,gBASA,kBAAC,IAAD,CAAS/I,UAAU,OAAOkJ,gBAAgB,cAAcH,GAAG,gBAA3D,gBAIA,kBAAC,IAAD,CACE/I,UAAU,OACVkJ,gBAAgB,cAChBH,GAAG,WAHL,iBAWF,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,YAAYC,UAAW/J,IAEzC,kBAAC,IAAD,CAAO8J,KAAK,uBAAuBC,UAAWnJ,IAE9C,kBAAC,IAAD,CAAOkJ,KAAK,uBAAuBC,UAAWrE,IAE9C,kBAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,kBAAkBC,UAAWpB,IAC/C,kBAAC,IAAD,CAAOmB,KAAK,sBAAsBC,UAAWd,IAE7C,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,uBAAuBC,UAAWX,IACpD,kBAAC,IAAD,CAAOU,KAAK,2BAA2BC,UAAWL,U,GAnE5ChF,aCNEsF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASjB,MACvB,2DCbNkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrH,SAASC,eAAe,SD0HpB,kBAAmBqH,WACrBA,UAAUC,cAAcC,MACrB7H,MAAK,SAAA8H,GACJA,EAAaC,gBAEdlE,OAAM,SAAAC,GACL1C,QAAQ0C,MAAMA,EAAMkE,c","file":"static/js/main.5eba1796.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.0e671e9c.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.4c4413da.svg\";","import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <header>\r\n            <div className=\"wrapper headingText\">\r\n            <h1>Love in the Time of Allergies</h1>\r\n            </div>\r\n            <div className=\"wrapper homeIntro\">\r\n                <p>Make sure to account for your guest's dietary needs at your next party.\r\n                Create guest profiles with allergies and diets, add them to your party, and search for recipes that will accomodate their needs.</p>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Home;","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAeYLavcsXAu2qyS3m3sl80bPDNeCrUqlk\",\r\n    authDomain: \"bemp-app-ed66c.firebaseapp.com\",\r\n    databaseURL: \"https://bemp-app-ed66c.firebaseio.com\",\r\n    projectId: \"bemp-app-ed66c\",\r\n    storageBucket: \"bemp-app-ed66c.appspot.com\",\r\n    messagingSenderId: \"929043957791\",\r\n    appId: \"1:929043957791:web:052c46f8f3643e8f5fad2a\"\r\n};\r\n\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport {storage, firebase as default};","import React, { Component } from 'react';\r\nimport firebase from '../firebase';\r\nimport storage from '../firebase';\r\n\r\n\r\nclass CreateGuest extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      files: null,\r\n      photoURL: \"https://www.rawlinsdavy.com/wp-content/uploads/2018/12/profile-placeholder-300x300.png\",\r\n      name: \"\",\r\n      email: \"\",\r\n      isPetFriendly: false,\r\n      diet: \"\",\r\n      // Dietary Restrictions\r\n      isDairyFree: false,\r\n      isEggFree: false,\r\n      isGlutenFree: false,\r\n      isGrainFree: false,\r\n      isPeanutFree: false,\r\n      isSeafoodFree: false,\r\n      isSesameFree: false,\r\n      isShellfishFree: false,\r\n      isSoyFree: false,\r\n      isSulfiteFree: false,\r\n      isTreeNutFree: false,\r\n      isWheatFree: false,\r\n      allergies: [],\r\n    };\r\n  }\r\n\r\n  populateAllergies = () => {\r\n      const allergiesArray = [];\r\n\r\n      if (this.state.isDairyFree) {\r\n        allergiesArray.push(\"Dairy\");\r\n      }\r\n      if (this.state.isEggFree) {\r\n        allergiesArray.push(\"Egg\");\r\n      }\r\n      if (this.state.isGrainFree) {\r\n        allergiesArray.push(\"Grain\");\r\n      }\r\n      if (this.state.isPeanutFree) {\r\n        allergiesArray.push(\"Peanut \");\r\n      }\r\n      if (this.state.isSeafoodFree) {\r\n        allergiesArray.push(\"Seafood\");\r\n      }\r\n      if (this.state.isSesameFree) {\r\n        allergiesArray.push(\"Sesame\");\r\n      }\r\n      if (this.state.isShellfishFree) {\r\n        allergiesArray.push(\"Shellfish\");\r\n      }\r\n      if (this.state.isSoyFree) {\r\n        allergiesArray.push(\"Soy\");\r\n      }\r\n      if (this.state.isSulfiteFree) {\r\n        allergiesArray.push(\"Sulfite\");\r\n      }\r\n      if (this.state.isTreeNutFree) {\r\n        allergiesArray.push(\"Tree Nut\");\r\n      }\r\n      if (this.state.isWheatFree) {\r\n        allergiesArray.push(\"Wheat\");\r\n      }\r\n    \r\n      this.setState(\r\n        {\r\n          allergies: allergiesArray,\r\n        }\r\n      );\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    // make a copy of current state before you run setState\r\n    const { name, value, type, checked } = e.target;\r\n    type === \"checkbox\"\r\n      ? this.setState({\r\n          [name]: checked,\r\n        }, (() => {\r\n            this.populateAllergies();\r\n        }))\r\n      : this.setState({\r\n          [name]: value,\r\n        });    \r\n  };\r\n\r\n  handleImageChange = (e) => {\r\n    const files = e.target.files;\r\n    this.setState({\r\n      files: files\r\n    })\r\n  };\r\n\r\n  handleUploadImage = (e) => {\r\n    e.preventDefault();\r\n    const bucketName = 'images';\r\n    if(this.state.files){\r\n      const file = this.state.files[0];\r\n      firebase\r\n        .storage()\r\n        .ref(`${bucketName}/${file.name}`)\r\n        .put(file)\r\n        .then(() => {\r\n          firebase\r\n            .storage()\r\n            .ref(`${bucketName}`)\r\n            .child(file.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              this.setState({\r\n                photoURL: url,\r\n              });\r\n              document.getElementById(\"guestImg\").src = url;\r\n            });\r\n        });\r\n    }\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      files: null,\r\n      photoURL:\r\n        \"https://www.rawlinsdavy.com/wp-content/uploads/2018/12/profile-placeholder-300x300.png\",\r\n      name: \"\",\r\n      email: \"\",\r\n      isPetFriendly: false,\r\n      diet: \"\",\r\n      // Dietary Restrictions\r\n      isDairyFree: false,\r\n      isEggFree: false,\r\n      isGlutenFree: false,\r\n      isGrainFree: false,\r\n      isPeanutFree: false,\r\n      isSeafoodFree: false,\r\n      isSesameFree: false,\r\n      isShellfishFree: false,\r\n      isSoyFree: false,\r\n      isSulfiteFree: false,\r\n      isTreeNutFree: false,\r\n      isWheatFree: false,\r\n      allergies: [],\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n        if(this.state.name && this.state.email){\r\n          const dbRef = firebase.database().ref(`/Guests/`);\r\n          dbRef.push({\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            petFriendly: this.state.isPetFriendly,\r\n            diet: this.state.diet,\r\n            allergies: this.state.allergies,\r\n            photoURL: this.state.photoURL\r\n          });\r\n          this.clearState();\r\n        } else {\r\n          alert(\"Name and Email are mandatory fields\");\r\n        }\r\n\r\n  };\r\n\r\n  render() {\r\n    const intolerances = this.state.allergies.toString();\r\n    console.log(intolerances);\r\n    return (\r\n      <section className=\"createGuestSection wrapper\">\r\n        <h2>Create Your Guests</h2>\r\n        <div className=\"createGuestCenter\">\r\n          <form className=\"createGuestForm\" onSubmit={this.handleSubmit}>\r\n            \r\n            {/* Name input */}\r\n            <label className=\"guestName\" htmlFor=\"Guest Name\"></label>\r\n            <input\r\n              className=\"textInput\"\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              onChange={this.handleChange}\r\n            />\r\n            {/* email Input */}\r\n            \r\n              <label htmlFor=\"Guest email\"></label>\r\n              <input\r\n                className=\"textInput\"\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                name=\"email\"\r\n                placeholder=\"Email\"\r\n                onChange={this.handleChange}\r\n              />\r\n            \r\n            {/* Pet friendliness input */}\r\n            <div className=\"petFriend\">\r\n              <label htmlFor=\"\">Are you ok with pets?</label>\r\n              <input\r\n                type=\"checkbox\"\r\n                value={this.state.isPetFriendly}\r\n                name=\"isPetFriendly\"\r\n                checked={this.state.isPetFriendly}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            {/* Image input */}\r\n            <div className=\"imageInput\">\r\n            <p>Upload an image for your profile</p>\r\n              <label htmlFor=\"select an image to upload\"></label>\r\n              <input\r\n                value={this.state.image}\r\n                type=\"file\"\r\n                onChange={(e) => {\r\n                  this.handleImageChange(e);\r\n                }}\r\n              />\r\n              <button\r\n                onClick={(e) => {\r\n                  this.handleUploadImage(e);\r\n                }}\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n            {/* Diet Input */}\r\n            <h3 className=\"dietHeader\">Diet</h3>\r\n            <div className=\"dietInput\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Gluten free\"\r\n                  checked={this.state.diet === \"Gluten free\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Gluten Free\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Vegetarian\"\r\n                  checked={this.state.diet === \"Vegetarian\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Vegetarian\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Vegan\"\r\n                  checked={this.state.diet === \"Vegan\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Vegan\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Pescetarian\"\r\n                  checked={this.state.diet === \"Pescetarian\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Pescetarian\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Paleo\"\r\n                  checked={this.state.diet === \"Paleo\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Paleo\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"diet\"\r\n                  value=\"Whole30\"\r\n                  checked={this.state.diet === \"Whole30\"}\r\n                  onChange={this.handleChange}\r\n                />{\" \"}\r\n                Whole 30\r\n              </label>\r\n            </div>\r\n            {/* Dietary Restrictions Input */}\r\n            <h3>Intolerances</h3>\r\n            <ul className=\"intolerances\">\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isDairyFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isDairyFree}\r\n                  />{\" \"}\r\n                  Dairy\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isEggFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isEggFree}\r\n                  />{\" \"}\r\n                  Egg\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isGrainFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isGrainFree}\r\n                  />{\" \"}\r\n                  Grain\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isPeanutFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isPeanutFree}\r\n                  />{\" \"}\r\n                  Peanut\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isSeafoodFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isSeafoodFree}\r\n                  />{\" \"}\r\n                  Seafood\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isSesameFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isSesameFree}\r\n                  />{\" \"}\r\n                  Sesame\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isShellfishFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isShellfishFree}\r\n                  />{\" \"}\r\n                  Shellfish\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isSoyFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isSoyFree}\r\n                  />{\" \"}\r\n                  Soy\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isSulfiteFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isSulfiteFree}\r\n                  />{\" \"}\r\n                  Sulfite\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isTreeNutFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isTreeNutFree}\r\n                  />{\" \"}\r\n                  Tree Nut\r\n                </label>\r\n              </li>\r\n              <li>\r\n                <label>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"isWheatFree\"\r\n                    onChange={this.handleChange}\r\n                    checked={this.state.isWheatFree}\r\n                  />{\" \"}\r\n                  Wheat\r\n                </label>\r\n              </li>\r\n            </ul>\r\n            <button onClick={(e) => this.handleSubmit(e)}>Submit</button>\r\n          </form>\r\n\r\n          <h5>Guest Information</h5>\r\n          <div className=\"guestInformation\">\r\n            <div className=\"guestInfoCenter\">\r\n              <div className=\"imageContainer\">\r\n              <img className=\"guestImage\"\r\n                id=\"guestImg\"\r\n                src={this.state.photoURL}\r\n                alt=\"\"\r\n              />\r\n\r\n              </div>\r\n              <p>Name: {this.state.name}</p>\r\n              <p>Email: {this.state.email}</p>\r\n              <p>\r\n                Pets ok:{\" \"}\r\n                {this.state.isPetFriendly ? \"pet friendly\" : \" \"}\r\n              </p>\r\n              <p>Diet: {this.state.diet}</p>\r\n              <p>Intolerances: {this.state.allergies}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default CreateGuest;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport add from '../assets/add.svg';\r\n\r\nclass CreatePartyAddingGuests extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            guest:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const dbRef = firebase.database().ref('/Guests');\r\n        dbRef.on('value', (response) => {\r\n\r\n            const data = response.val();\r\n            const guest = []\r\n            for (let key in data){\r\n                guest.push({ guestInfo: data[key], guestID: key })\r\n            }\r\n            this.setState({\r\n                guest\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ul className=\"viewUL\">\r\n                {this.state.guest.map((guest)=>{\r\n                    return (\r\n                        <div className=\"viewLIContainer\">\r\n                            <li classname=\"viewLI\" key={'cpag_'+guest.guestID} onClick={()=>this.props.getChoice(guest.guestID)} id={guest.guestID}>\r\n                                <div className=\"imageContainer profileImage\">\r\n                                    {/* add by The Icon Z from the Noun Project */}\r\n                                    <span aria-label=\"add\"><img className=\"add\" src={add} alt=\"\" /></span>\r\n                                    <img className=\"guestImg\" src={guest.guestInfo.photoURL} alt={guest.guestInfo.name}/>\r\n                                </div>\r\n                                <p className=\"guestName\">{guest.guestInfo.name}</p>\r\n                                <p>{guest.guestInfo.email}</p>\r\n                            </li>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreatePartyAddingGuests;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport CreatePartyAddingGuests from './CreatePartyAddingGuests'\r\nimport firebase from 'firebase'\r\nimport close from '../assets/close.svg';\r\n\r\n\r\n\r\n\r\nclass CreateParty extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      recipes: [],\r\n      partyName: \"\",\r\n      partyAddress: \"\",\r\n      partyDetails: \"\",\r\n      guestsKeys: [],\r\n      addedGuests: [],\r\n      dietList: [],\r\n      intoleranceList: [],\r\n      showGuestList: false,\r\n      photoURL: \"https://media3.s-nbcnews.com/j/newscms/2019_05/2736521/190131-stock-taco-bar-food-ew-1220p_bc7c9fc25ecd393bfa3d7d35f216edfc.fit-1240w.jpg\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  getRecipes = (e) => {\r\n    e.preventDefault();\r\n    // Spoonacular API call\r\n    const url = \"https://api.spoonacular.com/recipes/search\";\r\n    const key = \"ac3ee15e730b4a6c9dbc8bfa56524854\";\r\n\r\n    const intoleranceAxios = this.state.intoleranceList.join();\r\n    const dietAxios = this.state.dietList.join();\r\n\r\n    axios({\r\n      method: \"GET\",\r\n      url: url,\r\n      params: {\r\n        apiKey: key,\r\n        query: \"dinner\",\r\n        format: \"json\",\r\n        intolerances: intoleranceAxios,\r\n        diet: dietAxios,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        this.setState({\r\n          recipes: res.data.results,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  updateState = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value,\r\n    });\r\n  };\r\n\r\n  getUserKey = (key) => {\r\n    const guestsKeys = this.state.guestsKeys;\r\n    if (guestsKeys.includes(key) === false) guestsKeys.push(key);\r\n    this.setState(\r\n      {\r\n        guestsKeys,\r\n      },\r\n      () => {\r\n        this.convertKeys();\r\n        this.createIntolerancesList();\r\n        this.createDietList();\r\n      }\r\n    );\r\n  };\r\n\r\n  createDietList = () => {\r\n    const dietList = [];\r\n    for (let i = 0; i < this.state.guestsKeys.length; i++) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Guests/\" + this.state.guestsKeys[i])\r\n        .on(\"value\", (response) => {\r\n          // console.log(response.val().diet);\r\n          const diet = response.val().diet;\r\n          // dietList.push(diet)\r\n          if (dietList.includes(diet) === false && diet !== undefined)\r\n            dietList.push(diet);\r\n        });\r\n    }\r\n    this.setState({\r\n      dietList,\r\n    });\r\n  };\r\n\r\n  createIntolerancesList = () => {\r\n    const intoleranceList = [];\r\n    for (let i = 0; i < this.state.guestsKeys.length; i++) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Guests/\" + this.state.guestsKeys[i])\r\n        .on(\"value\", (response) => {\r\n          const intolerance = response.val().allergies;\r\n          for (let i = 0; i < intolerance.length; i++) {\r\n            if (\r\n              intoleranceList.includes(intolerance[i]) === false &&\r\n              intolerance[i] !== undefined\r\n            )\r\n              intoleranceList.push(intolerance[i]);\r\n          }\r\n        });\r\n    }\r\n    this.setState({\r\n      intoleranceList,\r\n    });\r\n  };\r\n\r\n  convertKeys = () => {\r\n    const addedGuests = [];\r\n    for (let i = 0; i < this.state.guestsKeys.length; i++) {\r\n      firebase\r\n        .database()\r\n        .ref(\"/Guests/\" + this.state.guestsKeys[i])\r\n        .on(\"value\", (response) => {\r\n          const profile = response.val();\r\n          profile.key=this.state.guestsKeys[i]\r\n          addedGuests.push(profile);\r\n        });\r\n    }\r\n    this.setState({\r\n      addedGuests,\r\n    });\r\n  };\r\n\r\n  submitParty = (e) => {\r\n    e.preventDefault();\r\n    // console.log('hello it me');\r\n    if (\r\n      this.state.partyName &&\r\n      this.state.partyAddress &&\r\n      this.state.partyDetails !== \"\"\r\n    ) {\r\n      const party = {};\r\n      party.partyName = this.state.partyName;\r\n      party.partyAddress = this.state.partyAddress;\r\n      party.partyDetails = this.state.partyDetails;\r\n      party.intoleranceList = this.state.intoleranceList;\r\n      party.dietList = this.state.dietList;\r\n      party.addedGuests = this.state.addedGuests;\r\n      party.photoURL = this.state.photoURL;\r\n      party.recipes = this.state.recipes\r\n      // console.log(party);\r\n\r\n      firebase.database().ref(\"/Parties\").push(party);\r\n\r\n      this.setState({\r\n        partyName: \"\",\r\n        partyAddress: \"\",\r\n        partyDetails: \"\",\r\n        intoleranceList: [],\r\n        dietList: [],\r\n        addedGuests: [],\r\n        recipes: [],\r\n        guestsKeys: [],\r\n        showGuestList: false,\r\n        photoURL: this.state.photoURL,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleAddGuests = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      showGuestList: !this.state.showGuestList,\r\n    });\r\n  };\r\n\r\n  handleImageChange = (e) => {\r\n    console.log(e.target.files);\r\n    const files = e.target.files;\r\n    this.setState({\r\n      files: files,\r\n    });\r\n  };\r\n\r\n  handleUploadImage = (e) => {\r\n    e.preventDefault();\r\n    const bucketName = \"images\";\r\n    if (this.state.files[0]) {\r\n      const file = this.state.files[0];\r\n      firebase\r\n        .storage()\r\n        .ref(`${bucketName}/${file.name}`)\r\n        .put(file)\r\n        .then(() => {\r\n          firebase\r\n            .storage()\r\n            .ref(`${bucketName}`)\r\n            .child(file.name)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              // console.log(url);\r\n              this.setState({\r\n                photoURL: url,\r\n              });\r\n            });\r\n        });\r\n    }\r\n  };\r\n\r\n  removeKey=(key)=>{\r\n    const guestsKeys = this.state.guestsKeys.filter(item=> item !== key)\r\n    this.setState(\r\n      {\r\n        guestsKeys,\r\n      },\r\n      () => {\r\n        this.convertKeys();\r\n        this.createIntolerancesList();\r\n        this.createDietList();\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"createPartySection\">\r\n        {/*Form*/}\r\n\r\n          <form className=\"wrapper\" action=\"\">\r\n          <h2>Create a Party</h2>\r\n          <div className=\"createPartyForm\">\r\n          <label htmlFor=\"Name of Party\"></label>\r\n          <input type=\"text\" id=\"partyName\" value={this.state.partyName} onChange={this.updateState} name=\"partyName\" placeholder=\"Party Name\"/>\r\n\r\n          <label htmlFor=\"Address\"></label>\r\n          <input type=\"text\" id=\"partyAddress\" value={this.state.partyAddress} onChange={this.updateState} name=\"address\" placeholder=\"Address\"/>\r\n\r\n          <label htmlFor=\"Details\"></label>\r\n          <input type=\"text\" id=\"partyDetails\" value={this.state.partyDetails} onChange={this.updateState} name=\"details\" placeholder=\"Date and Time\"/>\r\n\r\n          {/* Image Upload */}\r\n          \r\n          <div className=\"imageInput\">\r\n            <label htmlFor=\"party image\"></label>\r\n            <input\r\n              value={this.state.image}\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                this.handleImageChange(e);\r\n              }}\r\n            />\r\n            <button\r\n              onClick={(e) => {\r\n                this.handleUploadImage(e);\r\n              }}\r\n            >\r\n              Upload Image\r\n            </button>\r\n          </div>\r\n          </div>\r\n\r\n          {/*Adding Guests Component*/}\r\n\r\n          <div className=\"addExistingGuests\">\r\n          <button\r\n            className=\"addGuests\"\r\n            type=\"submit\"\r\n            onClick={(e) => this.toggleAddGuests(e)}\r\n          >\r\n            Add Existing Guests\r\n          </button>\r\n          </div>\r\n          <section className=\"viewSection\">\r\n            {this.state.showGuestList ? (\r\n              <CreatePartyAddingGuests getChoice={(e) => this.getUserKey(e)}/>) \r\n              : null}\r\n          </section>\r\n\r\n          {/*Displaying Guests*/}\r\n          <section className=\"viewSection\">\r\n            <h3>Added Guest List</h3>\r\n            <ul className=\"viewUL\">\r\n              {this.state.addedGuests.map((invitedGuests) => {\r\n                return (\r\n                  <div className=\"viewLIContainer\">\r\n                    <li className=\"viewLI\" onClick={()=>this.removeKey(invitedGuests.key)}>\r\n                      {/* close by The Icon Z from the Noun Project */}\r\n                      <span aria-label=\"close\"><img className=\"close\" src={close} alt=\"\" /></span>\r\n                      <div className=\"imageContainer profileImage\">\r\n                      <img\r\n                        className=\"guestImg\"\r\n                        src={invitedGuests.photoURL}\r\n                        alt={invitedGuests.name}\r\n                      />\r\n                      </div>\r\n                      <p className=\"guestName\">{invitedGuests.name}</p>\r\n                      <p>{invitedGuests.email}</p>\r\n                    </li>\r\n                  </div>\r\n                );\r\n              })}\r\n            </ul>\r\n          </section>\r\n\r\n          {/*Diet List*/}\r\n          <section className=\"dietsListSection\">\r\n            <h3>Diet List</h3>\r\n            <ul>\r\n              {this.state.dietList.map((diet) => {\r\n                return (\r\n                  <li>\r\n                    <p>{diet}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </section>\r\n\r\n          {/*Intolerance List*/}\r\n          <section className=\"intoleranceListSection\">\r\n            <h3>Intolerance List</h3>\r\n            <ul>\r\n              {this.state.intoleranceList.map((item) => {\r\n                return (\r\n                  <li>\r\n                    <p>{item}</p>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <label htmlFor=\"getRecipesButton\"></label>\r\n            <button\r\n              id=\"getRecipeButton\"\r\n              type=\"submit\"\r\n              onClick={(e) => this.getRecipes(e)}\r\n            >\r\n              Get Recipes\r\n            </button>\r\n          </section>\r\n\r\n          {/*Recipe API CALL */}\r\n\r\n          <section className=\"recipeGallerySection\">\r\n            <ul className=\"recipeGalleryUL\">\r\n              {this.state.recipes.map((recipeObj) => {\r\n                return (\r\n                  <li className=\"recipeLI\">\r\n                    <h4 className=\"recipeLink\">\r\n                      <a\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        href={recipeObj.sourceUrl}\r\n                      >\r\n                        {recipeObj.title}\r\n                      </a>\r\n                    </h4>\r\n                    <div className=\"imageContainer\">\r\n                    <img className=\"recipeImg\"\r\n                      src={`https://spoonacular.com/recipeImages/${\r\n                        recipeObj.id\r\n                      }-${\"480x360\"}.${\"jpg\"}`}\r\n                      alt={recipeObj.title}\r\n                    />\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </section>\r\n\r\n          <button id=\"createParty\" type=\"submit\" onClick={(e) => this.submitParty(e)}>Create Party</button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CreateParty;\r\n","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ViewGuests extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            guests:[\r\n                {\r\n                    guestInfo:{\r\n                        name:'',\r\n                        email:'',\r\n                        photoURL:'',\r\n                    },\r\n                },\r\n            ],\r\n            focusedUser: 'key'\r\n        }\r\n    }\r\n\r\n    syncGuests=()=>{\r\n        firebase.database().ref('/Guests').on('value',(results)=>{\r\n            const guests = []\r\n            const data = results.val()\r\n            for (let key in data){\r\n                guests.push({guestInfo: data[key], guestID : key})\r\n            }\r\n            this.setState({\r\n                guests\r\n            })   \r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.syncGuests();\r\n    }\r\n\r\n\r\n    focusUser=(e)=>{\r\n        this.setState({\r\n            focusedUser: e.target.id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"viewSection wrapper\">\r\n                <h2>Guest List</h2>\r\n                <ul className=\"viewUL\">\r\n                    {this.state.guests.map((guest)=>{\r\n                        return(\r\n                            <Link className='viewLILink' key={'link'+guest.guestID} to={'/guests/'+guest.guestID}>\r\n                            <li key={guest.guestID} className='viewLI' id={guest.guestID} onClick={(e)=>this.focusUser(e)}>\r\n                                <div className=\"imageContainer profileImage\">\r\n                                    <img className=\"guestImg\" src={guest.guestInfo.photoURL} alt={'Profile pic of '+guest.guestInfo.name}/>\r\n                                </div>\r\n                                <h3>{guest.guestInfo.name}</h3>\r\n                            </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewGuests","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ViewGuestsFocus extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            focusedUser:{\r\n                name:'',\r\n                email:'',\r\n                photoURL:'',\r\n            }\r\n        }\r\n    }\r\n\r\n    syncGuests=()=>{\r\n        firebase.database().ref('/Guests/'+this.props.match.params.id).on('value',(results)=>{\r\n            this.setState({\r\n                focusedUser: results.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.syncGuests();\r\n    }\r\n\r\n\r\n    focusUser=(e)=>{\r\n        this.setState({\r\n            focusedUser: e.target.id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"viewGuestFocusSection wrapper\">\r\n                <div className=\"profileCard\">\r\n                <Link className=\"link\" activeClassName=\"currentPage\" to=\"/guests\">...go back</Link>\r\n                    <div className=\"imageContainer\">\r\n                        <img src={this.state.focusedUser.photoURL} alt={this.state.focusedUser.name + ' profile picture'}/>\r\n                    </div>\r\n                    <h2>{this.state.focusedUser.name}</h2>\r\n                    <p>{this.state.focusedUser.email}</p>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewGuestsFocus","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass ViewParties extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            parties:[\r\n                {\r\n                    \r\n                    partyInfo:{\r\n\r\n                        addedGuests:[],\r\n                        dietList:[],\r\n                        intoleranceList:[],\r\n                        partyAddress:'',\r\n                        partyDetails:'',\r\n                        partyName:'',\r\n                    }\r\n                },\r\n            ],\r\n            focusedParty: 'key'\r\n        }\r\n    }\r\n\r\n    syncParties=()=>{\r\n        firebase.database().ref('/Parties').on('value',(results)=>{\r\n            const parties = []\r\n            const data = results.val()\r\n            console.log(results.val());\r\n            for (let key in data){\r\n                parties.push({partyInfo: data[key], partyID : key})\r\n            }            \r\n            this.setState({\r\n                parties\r\n            })   \r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.syncParties();\r\n    }\r\n\r\n\r\n    focusUser=(e)=>{\r\n        this.setState({\r\n            focusedParty: e.target.id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"viewSection wrapper\">\r\n                <h2>Parties</h2>\r\n                <ul className=\"viewUL\">\r\n                    {this.state.parties.map((party)=>{\r\n                        return(\r\n                            <Link className='viewLILink' key={'link'+party.partyID} to={'/viewParties/'+party.partyID}>\r\n                            <li key={party.partyID} className='viewLI' id={party.partyID} onClick={(e)=>this.focusUser(e)}>\r\n                                <div className=\"imageContainer\">\r\n                                    <img src={party.partyInfo.photoURL} alt={party.partyInfo.partyDetails}/>\r\n                                </div>\r\n                                <h3>{party.partyInfo.partyName}</h3>\r\n                                <p>{party.partyInfo.partyAddress}</p>\r\n                                <p>{party.partyInfo.partyDetails}</p>\r\n                            </li>\r\n                            </Link>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewParties","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass ViewPartiesFocus extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            focusedParty:{\r\n                partyName:'',\r\n                partyDetails:'',\r\n                photoURL:'',\r\n                dietList:[],\r\n                intoleranceList:[],\r\n                addedGuests:[],\r\n                recipes:[]\r\n            }\r\n        }\r\n    }\r\n\r\n    syncParty=()=>{\r\n        firebase.database().ref('/Parties/'+this.props.match.params.id).on('value',(results)=>{\r\n            console.log(results.val());\r\n            this.setState({\r\n                focusedParty: results.val()\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.syncParty();\r\n    }\r\n\r\n\r\n    focusUser=(e)=>{\r\n        this.setState({\r\n            focusedUser: e.target.id\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.focusedParty);\r\n        \r\n        return(\r\n            <section className=\"viewPartiesFocusSection wrapper\">\r\n                <Link className=\"link\" activeClassName=\"currentPage\" to=\"/viewParties\">...go back</Link>\r\n                <div className=\"profileCard\">\r\n                    <div className=\"imageContainer\">\r\n                        <img src={this.state.focusedParty.photoURL} alt={this.state.focusedParty.partyDetails}/>\r\n                    </div>\r\n                    <h2>{this.state.focusedParty.partyName}</h2>\r\n                    <p>{this.state.focusedParty.partyDetails}</p>\r\n\r\n                    <div className=\"guestList\">\r\n                        <h3>Guest List</h3>\r\n                        <ul className=\"guestListUL\">\r\n                            {this.state.focusedParty.addedGuests.map((guest)=>{\r\n                                return <li className=\"guestLI\"><p>{guest.name}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"restrictionsList\">\r\n                        <h3>Warning! Be careful of the following:</h3>\r\n                        <ul className=\"dietListFocusUL\">\r\n                            {this.state.focusedParty.dietList.map((diet)=>{\r\n                                return <li className=\"dietFocusLI\"><p>{diet}</p></li>\r\n                            })}\r\n                        </ul>\r\n\r\n                        <ul className=\"intoleranceListFocusUL\">\r\n                            {this.state.focusedParty.intoleranceList.map((intolerance)=>{\r\n                                return <li className=\"intoleranceFocusLI\"><p>{intolerance}</p></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <section className=\"recipeGallerySection\">\r\n                        <h3>Suggested Recipes</h3>\r\n                        <ul className=\"recipeGalleryUL\">\r\n                        {this.state.focusedParty.recipes.map((recipeObj) => {\r\n                            return (\r\n                            <li className=\"recipeLI\">\r\n                                <h4 className=\"recipeLink\">\r\n                                <a\r\n                                    rel=\"noopener noreferrer\"\r\n                                    target=\"_blank\"\r\n                                    href={recipeObj.sourceUrl}\r\n                                >\r\n                                    {recipeObj.title}\r\n                                </a>\r\n                                </h4>\r\n                                <div className=\"imageContainer\">\r\n                                <img className=\"recipeImg\"\r\n                                src={`https://spoonacular.com/recipeImages/${\r\n                                    recipeObj.id\r\n                                }-${\"480x360\"}.${\"jpg\"}`}\r\n                                alt={recipeObj.title}\r\n                                />\r\n                                </div>\r\n                            </li>\r\n                            );\r\n                        })}\r\n                        </ul>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ViewPartiesFocus","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport './App.scss';\r\nimport Home from './components/Home';\r\nimport CreateGuest from './components/CreateGuest';\r\nimport CreateParty from './components/CreateParty'\r\nimport ViewGuests from './components/ViewGuests'\r\nimport ViewGuestsFocus from './components/ViewGuestsFocus';\r\nimport ViewParties from './components/ViewParties'\r\nimport ViewPartiesFocus from './components/ViewPartiesFocus'\r\n// import CreatePartyAddingGuests from './components/CreatePartyAddingGuests'\r\n// import FocusGuest from './components/FocusGuest';\r\n\r\nclass App extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n        <Router>\r\n          {/* <CreatePartyAddingGuests /> */}\r\n          <div className=\"App\">\r\n            {/* Navigation */}\r\n            <nav className=\"globalNav\">\r\n              <div className=\"wrapper\">\r\n              <NavLink\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"currentPage\"\r\n                to=\"/\"\r\n              >\r\n                Home\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                exact\r\n                className=\"link\"\r\n                activeClassName=\"currentPage\"\r\n                to=\"/createGuest\"\r\n              >\r\n                Create Guest\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"link\"\r\n                activeClassName=\"currentPage\"\r\n                to=\"/createParty\"\r\n              >\r\n                Create Party{/* This is the API call */}\r\n                {/* <Recipe /> */}\r\n              </NavLink>\r\n\r\n              <NavLink className=\"link\" activeClassName=\"currentPage\" to=\"/viewParties\">\r\n                View Parties\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                className=\"link\"\r\n                activeClassName=\"currentPage\"\r\n                to=\"/guests\"\r\n              >\r\n                View Guests\r\n              </NavLink>\r\n              </div>\r\n            </nav>\r\n\r\n            {/* Routes */}\r\n            <Route exact path=\"/bempApp/\" component={Home} />\r\n\r\n            <Route path=\"/bempApp/createGuest\" component={CreateGuest} />\r\n\r\n            <Route path=\"/bempApp/createParty\" component={CreateParty} />\r\n\r\n            <Route exact path=\"/bempApp/guests\" component={ViewGuests} />\r\n            <Route path=\"/bempApp/guests/:id\" component={ViewGuestsFocus} />\r\n\r\n            <Route exact path=\"/bempApp/viewParties\" component={ViewParties}/>\r\n            <Route path=\"/bempApp/viewParties/:id\" component={ViewPartiesFocus}/>\r\n\r\n          </div>\r\n        </Router>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}